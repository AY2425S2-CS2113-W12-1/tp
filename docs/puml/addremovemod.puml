@startuml
actor user
participant ":Command" as C
participant ":User" as U
participant ":Schedule" as S

user -> C: execute("addModToTimetable timetableName modCodeOrName")
activate C

C -> U: hasTimetable(timetableName)
activate U
U --> C: true or false
deactivate U

alt Timetable found
    C -> C: modFromCodeOrName(modQuery)

    alt Mod found
        loop for each timetable in user's list
            alt timetable name matches
                C -> U: addModToTimetable(timetableName, mod)
                activate U
                U -> S: addMod(mod)
                activate S
                S --> U: (mod added)
                deactivate S
                U --> C: (mod added)
                deactivate U

            end
        end
        C --> user: "Mod added to timetable."

    else Mod not found
        C --> user: "Mod not found."
    end

else Timetable not found
    C --> user: "Timetable not found."
end

deactivate C


user -> C: execute("removeModFromTimetable timetableName modCodeOrName")
activate C

C -> U: hasTimetable(timetableName)
activate U
U --> C: true or false
deactivate U

alt Timetable found
    C -> C: modFromCodeOrName(modQuery)

    alt Mod found
        loop for each timetable in user's list
            alt timetable name matches
                C -> U: removeModFromTimetable(timetableName, mod)
                activate U
                U -> S: removeMod(mod)
                activate S
                S --> U: (mod removed)
                deactivate S
                U --> C: (removal status)
                deactivate U

            end
        end
        C --> user: "Mod removed from timetable."

    else Mod not found
        C --> user: "Mod not found."
    end

else Timetable not found
    C --> user: "Timetable not found."
end

deactivate C
@enduml
